@model webdemo.Context.Product

@{
    ViewBag.Title = "Create Product";
}
<script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
<div class="container mt-5">
    <h2 class="text-center mb-4">Create Product</h2>

    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product Information</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <!-- Category -->
            <div class="form-group row">
                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Brand -->
            <div class="form-group row">
                @Html.LabelFor(model => model.BrandId, "Brand", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Type -->
            <div class="form-group row">
                @Html.LabelFor(model => model.TypeId, "Product Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Short Description -->
            <div class="form-group row">
                @Html.LabelFor(model => model.ShortDes, "Short Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShortDes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShortDes, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Product Name -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Name, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Full Description -->
            <div class="form-group row">
                @Html.LabelFor(model => model.FullDescription, "Full Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control", @id = "FullDescription" } })
                    <script type="text/javascript" lang="javascript">
                        CKEDITOR.replace("FullDescription");
                    </script>
                    @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Price -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Price, "Price", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Price Discount -->
            <div class="form-group row">
                @Html.LabelFor(model => model.PriceDiscount, "Price Discount", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PriceDiscount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PriceDiscount, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Slug -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Slug, "Slug", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Image Upload -->
            <div class="form-group row">
                @Html.LabelFor(model => model.Image, "Product Image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="Image" class="form-control" />
                </div>
            </div>

            <!-- Show On Home Page -->
            <div class="form-group row">
                @Html.LabelFor(model => model.ShowOnHomePage, "Show on Home Page", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.ShowOnHomePage)
                        @Html.ValidationMessageFor(model => model.ShowOnHomePage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Created On -->
            <div class="form-group row">
                @Html.LabelFor(model => model.CreatedOnUtc, "Created On", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CreatedOnUtc, "{0:yyyy-MM-ddTHH:mm}", new { @class = "form-control", type = "datetime-local" })
                    @Html.ValidationMessageFor(model => model.CreatedOnUtc, "", new { @class = "text-danger" })
                </div>
            </div>


            <!-- Submit Button -->
            <div class="form-group row">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create Product" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>

<div class="text-center mt-3">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>
